{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/app/components/admin_interface/paying_system.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { UseGetMethod } from \"@/app/hooks/get_method\";\r\ninterface User {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  isPayer: boolean;\r\n  dept: number;\r\n  _id: string;\r\n}\r\n\r\nexport default function PayingSystem() {\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL;\r\n  const [response, setResponse] = useState<string | undefined>(undefined);\r\n  const [operation, setOperation] = useState<boolean>(true);\r\n  const [customAmount, setCustomAmount] = useState<any>(0);\r\n  const [refreshTrigger, setRefreshTrigger] = useState<number>(0);\r\n  const [openingIndex, setOpeningIndex] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n  const [showInput, setShowHiddenInput] = useState<boolean>(false);\r\n  const addToDept = async (\r\n    id: string,\r\n    amount: number,\r\n    userCurrentAmount: number,\r\n    index: number\r\n  ) => {\r\n    setOpeningIndex(index);\r\n    const NewAmount = operation\r\n      ? amount + userCurrentAmount\r\n      : userCurrentAmount - amount;\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/addToDept`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ id, NewAmount }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setRefreshTrigger((prev) => prev + 1);\r\n        setResponse(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const openHiddenPart = (index: number) => {\r\n    setResponse(undefined);\r\n    setOpeningIndex(index);\r\n    setShowHiddenInput(true);\r\n  };\r\n  const addToCustomDept = async (id: string, userCurrentAmount: number) => {\r\n    const NewAmount = operation\r\n      ? Number(customAmount) + userCurrentAmount\r\n      : userCurrentAmount - Number(customAmount);\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/addToDept`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ id, NewAmount }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setRefreshTrigger((prev) => prev + 1);\r\n        setResponse(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const { dataHook } = UseGetMethod<User[]>(\"getusers\", refreshTrigger);\r\n\r\n  const changeOperation = () => {\r\n    if (operation) {\r\n      setOperation(false);\r\n    } else {\r\n      setOperation(true);\r\n    }\r\n  };\r\n  return (\r\n    <section>\r\n      <div className=\"flex justify-end items-center\">\r\n        <h2>Typ operácie:</h2>\r\n        <button\r\n          className=\" rounded-full bg-blue-700 w-[80px] m-15 h-[80px] text-white\"\r\n          onClick={() => changeOperation()}\r\n        >\r\n          {operation ? (\r\n            <p className=\"text-white\">+</p>\r\n          ) : (\r\n            <p className=\"text-white\">-</p>\r\n          )}\r\n        </button>\r\n      </div>\r\n      <div className=\"gird grid-cols-1 gap-8\">\r\n        {dataHook\r\n          ?.filter((user) => user.isPayer !== true)\r\n          .map((user, index) => (\r\n            <article\r\n              key={index}\r\n              className=\"bg-foreground m-15 flex   w-[1fr] h-fit rounded-2xl p-5 flex-center\"\r\n            >\r\n              <article className=\"flex flex-col\">\r\n                <h3 className=\" text-white\">\r\n                  {user.name} {user.surname}{\" \"}\r\n                </h3>\r\n                <h3 className=\"text-white\">{(user.dept / 100).toFixed(2)} $</h3>\r\n                {response && index === openingIndex && (\r\n                  <p className=\"text-white\">{response}</p>\r\n                )}\r\n              </article>\r\n\r\n              <article className=\"flex items-center\">\r\n                <button\r\n                  onClick={() => addToDept(user._id, 70, user.dept, index)}\r\n                >\r\n                  {operation ? <p>Plus</p> : <p>Minus</p>} 70 cents\r\n                </button>\r\n                <button\r\n                  onClick={() => addToDept(user._id, 75, user.dept, index)}\r\n                >\r\n                  {operation ? <p>Plus</p> : <p>Minus</p>} 75 cents\r\n                </button>\r\n                {index !== openingIndex && (\r\n                  <button onClick={() => openHiddenPart(index)}>\r\n                    Zadat custom hodnotu\r\n                  </button>\r\n                )}\r\n                {showInput && index === openingIndex && (\r\n                  <div className=\"flex-center flex-col\">\r\n                    <label htmlFor=\"\" className=\"text-foreground text-white\">\r\n                      {operation ? (\r\n                        <p className=\"text-white\">Plus</p>\r\n                      ) : (\r\n                        <p className=\"text-white\">Minus</p>\r\n                      )}\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={customAmount}\r\n                      onChange={(e) => setCustomAmount(e.target.value)}\r\n                    />\r\n                    <button\r\n                      onClick={() => addToCustomDept(user._id, user.dept)}\r\n                    >\r\n                      Posla novu hodnotu\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </article>\r\n            </article>\r\n          ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/app/components/admin_interface/admin_interface.tsx"],"sourcesContent":["import { UseGetMethod } from \"@/app/hooks/get_method\";\r\nimport React, { use, useState } from \"react\";\r\nimport ListOfUsers from \"./list_of_users\";\r\nimport PayingSystem from \"./paying_system\";\r\n\r\ninterface User {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  isPayer: boolean;\r\n  dept: number;\r\n}\r\n\r\nexport default function AdminInterface() {\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL;\r\n  const { dataHook } = UseGetMethod<User[]>(\"getusers\");\r\n\r\n  const [toggle, setToggle] = useState<string>(\"Všetci prihlásený\");\r\n  const filterUsers = () => {\r\n    if (toggle === \"Všetci prihlásený\") {\r\n      setToggle(\"Platiteľia\");\r\n    } else {\r\n      setToggle(\"Všetci prihlásený\");\r\n    }\r\n  };\r\n  return (\r\n    <main>\r\n      <button onClick={() => filterUsers()}>{toggle}</button>\r\n      {/* {toggle === \"Platiteľia\" && <ListOfUsers data={dataHook} />} */}\r\n      {toggle === \"Všetci prihlásený\" && <PayingSystem />}\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAckB;;AAdlB;AACA;AAEA;;;;;;AAUe,SAAS;;IACtB,MAAM;IACN,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,eAAY,AAAD,EAAU;IAE1C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,cAAc;QAClB,IAAI,WAAW,qBAAqB;YAClC,UAAU;QACZ,OAAO;YACL,UAAU;QACZ;IACF;IACA,qBACE,6LAAC;;0BACC,6LAAC;gBAAO,SAAS,IAAM;0BAAgB;;;;;;YAEtC,WAAW,qCAAuB,6LAAC,yJAAA,CAAA,UAAY;;;;;;;;;;;AAGtD;GAnBwB;KAAA","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/app/users/%5Busername%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport AdminInterface from \"@/app/components/admin_interface/admin_interface\";\r\nimport { UseGetMethod } from \"@/app/hooks/get_method\";\r\nimport React, { useEffect } from \"react\";\r\nimport { LoginRegistrationContext } from \"@/app/context/login_registration\";\r\nimport { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface User {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n}\r\n\r\nexport default function UserInterface({\r\n  params,\r\n}: {\r\n  params: { username: string };\r\n}) {\r\n  const router = useRouter();\r\n  const [showAdminContext, setShowAdminContext] = useState<boolean>(false);\r\n  const context = useContext(LoginRegistrationContext);\r\n  const { dataHook, loadingHook } = UseGetMethod<User>(\"getuser\");\r\n\r\n  useEffect(() => {\r\n    if (\r\n      dataHook?.email === \"martinhayden3030@gmail.com\" &&\r\n      dataHook.name === \"Martin\" &&\r\n      dataHook.surname === \"Hayden\"\r\n    ) {\r\n      setShowAdminContext(true);\r\n    } else if (\r\n      dataHook?.email !== \"martinhayden3030@gmail.com\" &&\r\n      dataHook?.name !== \"Martin\" &&\r\n      dataHook?.surname !== \"Hayden\"\r\n    ) {\r\n      setShowAdminContext(false);\r\n    }\r\n  }, [dataHook?.email, dataHook?.name, dataHook?.surname]);\r\n  console.log(showAdminContext);\r\n  return (\r\n    <div>\r\n      {loadingHook && <p>loading...</p>}\r\n      {!loadingHook && showAdminContext ? <AdminInterface /> : <p>User</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAGA;;;AAPA;;;;;;;;AAee,SAAS,cAAc,EACpC,MAAM,EAGP;;IACC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAClE,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,wIAAA,CAAA,2BAAwB;IACnD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,eAAY,AAAD,EAAQ;IAErD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IACE,UAAU,UAAU,gCACpB,SAAS,IAAI,KAAK,YAClB,SAAS,OAAO,KAAK,UACrB;gBACA,oBAAoB;YACtB,OAAO,IACL,UAAU,UAAU,gCACpB,UAAU,SAAS,YACnB,UAAU,YAAY,UACtB;gBACA,oBAAoB;YACtB;QACF;kCAAG;QAAC,UAAU;QAAO,UAAU;QAAM,UAAU;KAAQ;IACvD,QAAQ,GAAG,CAAC;IACZ,qBACE,6LAAC;;YACE,6BAAe,6LAAC;0BAAE;;;;;;YAClB,CAAC,eAAe,iCAAmB,6LAAC,2JAAA,CAAA,UAAc;;;;qCAAM,6LAAC;0BAAE;;;;;;;;;;;;AAGlE;GAhCwB;;QAKP,qIAAA,CAAA,YAAS;;;KALF","debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}