{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/app/components/login_registration/login.tsx"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useState, FormEvent, useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { LoginRegistrationContext } from \"@/app/context/login_registration\";\r\nconst Login = () => {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [message, setMessage] = useState<string | null>(null);\r\n  const [responseMessage, setResponseMessage] = useState<string>(\"\");\r\n  const [errs, setErrs] = useState<\r\n    { Errors?: { email?: string; password?: string } } | string | null\r\n  >(null);\r\n\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL;\r\n  const context = useContext(LoginRegistrationContext);\r\n  const submitForm = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setResponseMessage(\"\");\r\n    const data = { email, password };\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        console.log(errorData);\r\n        setErrs(errorData);\r\n      } else {\r\n        const result = await res.json();\r\n\r\n        setResponseMessage(result);\r\n        if (result === \"Úspešene ste sa prihlásili\") {\r\n          context?.setResponse((prev) => prev + 1);\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Chyba pri prihlasovaní:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"flex-center h-[90vh]\">\r\n      <form onSubmit={submitForm} className=\"form \">\r\n        <h2 className=\"text-black text-center m-5\">Prihlásenie</h2>\r\n        {responseMessage && responseMessage !== \"Úspešene ste sa prihlásili\" ? (\r\n          <p className=\"text-red-500 p-5 text-center border-red-500 border-2\">\r\n            {responseMessage}\r\n          </p>\r\n        ) : null}\r\n        {responseMessage && responseMessage === \"Úspešene ste sa prihlásili\" ? (\r\n          <p className=\"text-purple p-5 text-center border-purple border-2\">\r\n            {responseMessage}\r\n          </p>\r\n        ) : null}\r\n\r\n        <div className=\"w-full m-2 h-fit flex flex-col\">\r\n          <label className=\"mb-4\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"w-full\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"w-full m-2 h-fit flex flex-col\">\r\n          <label className=\"\">Heslo:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"w-full\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"buttonForm bg-blue-600 hover:bg-blue-800\"\r\n        >\r\n          Prihlásiť sa\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;;;;;;AAKA,MAAM,QAAQ;IACZ,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAE7B;IAEF,MAAM;IACN,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,qIAAA,CAAA,2BAAwB;IACnD,MAAM,aAAa,OAAO;QACxB,EAAE,cAAc;QAChB,mBAAmB;QACnB,MAAM,OAAO;YAAE;YAAO;QAAS;QAE/B,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;gBAC1C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,YAAY,MAAM,IAAI,IAAI;gBAChC,QAAQ,GAAG,CAAC;gBACZ,QAAQ;YACV,OAAO;gBACL,MAAM,SAAS,MAAM,IAAI,IAAI;gBAE7B,mBAAmB;gBACnB,IAAI,WAAW,8BAA8B;oBAC3C,SAAS,YAAY,CAAC,OAAS,OAAO;gBACxC;YACF;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,2BAA2B,MAAM,OAAO;QACxD;IACF;IAEA,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAK,UAAU;YAAY,WAAU;;8BACpC,8OAAC;oBAAG,WAAU;8BAA6B;;;;;;gBAC1C,mBAAmB,oBAAoB,6CACtC,8OAAC;oBAAE,WAAU;8BACV;;;;;2BAED;gBACH,mBAAmB,oBAAoB,6CACtC,8OAAC;oBAAE,WAAU;8BACV;;;;;2BAED;8BAEJ,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAO;;;;;;sCACxB,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;;;;;;;;;;;;8BAId,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAG;;;;;;sCACpB,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;;;;;;;;;;;;8BAId,8OAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;uCAEe","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Martin%20Hay/list_of_payers/frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}